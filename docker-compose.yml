services:
  # --- Service PostgreSQL ---
  postgres:
    image: postgres:15 # Version recommandée de PostgreSQL
    restart: unless-stopped
    container_name: otobot_postgres_db # Nom du conteneur spécifique au projet
    environment:
      POSTGRES_DB: otobot_n8n # Nom de la base de données spécifique au projet pour n8n
      POSTGRES_USER: otobot_n8n # Nom d'utilisateur spécifique au projet pour n8n
      POSTGRES_PASSWORD: 43Z%DzumBWb8#hm#JE%K # << IMPORTANT: Définis un mot de passe fort ici
      # POSTGRES_NON_ROOT_USER: your_other_user # Optionnel: pour un autre utilisateur, si besoin
      # POSTGRES_NON_ROOT_PASSWORD: your_other_password # Optionnel: pour un autre utilisateur, si besoin
    volumes:
      - ~/Docker_Volumes/postgres_data:/var/lib/postgresql/data # Persistance des données de la DB
    networks:
      - otobot_backend_network # Connexion au réseau interne du projet

  # --- Service N8N ---
  n8n:
    image: n8nio/n8n # Nouveau nom d'image officiel
    restart: unless-stopped
    container_name: otobot_n8n # Nom du conteneur spécifique au projet
    ports:
      - "5678:5678" # Mappe le port 5678 du conteneur au port 5678 du VPS
    volumes:
      - ~/Docker_Volumes/n8n_data:/home/node/.n8n # Persistance des données de n8n
    environment:
      # --- Paramètres N8N ---
      - N8N_HOST=37.59.105.73 # Remplace par l'IP de ton VPS (ou ton nom de domaine si tu en utilises un plus tard)
      - WEBHOOK_URL=http://37.59.105.73:5678/ # URL pour les webhooks
      - N8N_PORT=5678
      - N8N_PROTOCOL=http # Si tu n'utilises pas HTTPS (recommandé plus tard avec un reverse proxy)
      - TZ=Europe/Paris # Définis ton fuseau horaire
      - N8N_SECURE_COOKIE=false # Paramètre temporaire, a supprimer pour la Production. Nécessaire car pas encore possible d'activer la connexion HTTPS, car nécessite de pluger le nom de domaine sur l'IP. A faire en urgence pour sécuriser le serveur

      # --- Paramètres de base de données (Connexion à PostgreSQL) ---
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=otobot_postgres_db # Nom du service PostgreSQL dans le même docker-compose
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=otobot_n8n # Nom de la base de données défini pour PostgreSQL
      - DB_POSTGRESDB_USER=otobot_n8n # Nom d'utilisateur défini pour PostgreSQL
      - DB_POSTGRESDB_PASSWORD=43Z%DzumBWb8#hm#JE%K # << IMPORTANT: Le même que ci-dessus

      # --- Paramètres de gestion des utilisateurs (première configuration) ---
      # À ENLEVER/COMMENTER APRÈS LA PREMIÈRE CONNEXION ET CRÉATION DE COMPTE !
      # - N8N_USER_MANAGEMENT_ENABLED=true
      # - N8N_USERS_ALLOW_SIGNUP=true

    networks:
      - otobot_backend_network # Connexion au réseau interne du projet

# --- Définition des réseaux Docker ---
networks:
  otobot_backend_network: # Nom du réseau qui connecte les services (spécifique au projet)
    driver: bridge # Type de réseau par défaut, suffisant ici
