# Ajout à votre docker-compose.yml existant

services:
  # ... vos services existants (n8n, postgres) ...

  # API Interne pour la gestion des credentials
  api-internal:
    build: 
      context: ./api-internal
      dockerfile: Dockerfile
    restart: always
    ports: 
      - "3001:3001"  # Port interne uniquement accessible depuis le réseau Docker
    environment:
      - NODE_ENV=production
      - FRONTEND_DB_HOST=postgres
      - FRONTEND_DB_NAME=${FRONTEND_DB_NAME}
      - FRONTEND_DB_USER=${FRONTEND_DB_USER}
      - FRONTEND_DB_PASSWORD=${FRONTEND_DB_PASSWORD}
      - ENCRYPTION_MASTER_KEY=${ENCRYPTION_MASTER_KEY}
      - N8N_INTERNAL_TOKEN=${N8N_INTERNAL_TOKEN}
      - INTERNAL_API_PORT=3001
    volumes:
      - ./api-internal:/app
      - /app/node_modules  # Éviter de monter node_modules depuis l'hôte
    depends_on:
      - postgres
    networks:
      - otobot-network
    profiles: ["api"]  # Profil optionnel si vous voulez le contrôler

  # Tâche cron pour le refresh automatique des tokens
  token-refresher:
    build:
      context: ./api-internal
      dockerfile: Dockerfile.cron
    restart: always
    environment:
      - NODE_ENV=production
      - INTERNAL_API_URL=http://api-internal:3001
      - N8N_INTERNAL_TOKEN=${N8N_INTERNAL_TOKEN}
    depends_on:
      - api-internal
    networks:
      - otobot-network
    profiles: ["api"]

# Assurez-vous que tous vos services sont sur le même réseau
networks:
  otobot-network:
    